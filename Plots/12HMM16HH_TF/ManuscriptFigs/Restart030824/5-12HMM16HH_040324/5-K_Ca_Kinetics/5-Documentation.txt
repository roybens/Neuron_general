Mod files:
na12.mod
na12mut.mod
na16HH_TF.mod













#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################

NeuronModelClass.py

#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################

# -*- coding: utf-8 -*-
"""
Created on Sat Oct 16 21:07:44 2021

@author: bensr
"""
import argparse
import numpy as np
from vm_plotter import *
from neuron import h
import os
import csv
import sys
import pandas as pd
import matplotlib.pyplot as plt
from NrnHelper import *


class NeuronModel:
    def __init__(self,ais_nav16_fac, ais_nav12_fac, mod_dir = './Neuron_Model_12HMM16HH/',#'./Neuron_Model_12HH16HMM/',#'./Neuron_Model_HH/', 
                      
                      update = None, ##TF If this is true, mechs are updated with update_mech_from_dict. Turn to false if you don't want update ### maybe not working???????
                      na12name = 'na12_HMM_TF100923',
                      na12mut_name = 'na12_HMM_TF100923',
                      na12mechs = ['na12','na12mut'],
                      na16name = 'na16HH_TF',
                      na16mut_name = 'na16HH_TF',
                      na16mechs=['na16','na16mut'],
                      params_folder = './params/',

                      nav12=1,
                      nav16=1,
                      dend_nav12=1,
                      soma_nav12=1,
                      dend_nav16=1,
                      soma_nav16=1,
                      ais_nav12=1,
                      ais_nav16=1,
                      ais_ca = 1,
                      ais_KCa = 1,
                      axon_Kp=1,
                      axon_Kt =1,
                      axon_K=1,
                      axon_Kca =1,
                      axon_HVA = 1,
                      axon_LVA = 1,
                      node_na = 1,
                      soma_K=1,
                      dend_K=1,
                      gpas_all=1
                      ):
        run_dir = os.getcwd()

        os.chdir(mod_dir)
        self.h = h  # NEURON h
        print(f'running model at {os.getcwd()} run dir is {run_dir}')
        print (f'There is {nav16} of WT nav16')
        print(f'There is {nav12} of WT nav12')
        h.load_file("runModel.hoc")
        self.soma_ref = h.root.sec
        self.soma = h.secname(sec=self.soma_ref)
        self.sl = h.SectionList()
        self.sl.wholetree(sec=self.soma_ref)
        self.nexus = h.cell.apic[66]
        self.dist_dend = h.cell.apic[91]
        self.ais = h.cell.axon[0]
        self.axon_proper = h.cell.axon[1]
        

        ### Old model params from GY's branch
        # h.dend_na12 = 0.012/2
        # h.dend_na16 = h.dend_na12
        # h.dend_k = 0.004226 * soma_K
        
        # h.soma_na12 = 0.983955/10
        # h.soma_na16 = h.soma_na12
        # h.soma_K = 8.396194779331378477e-02 * soma_K
        
        # h.ais_na16 = 4
        # h.ais_na12 = 4
        # h.ais_ca = 0.00990*4*ais_ca
        # h.ais_KCa = 0.007104*ais_KCa

        # h.node_na = 2 * node_na

        # h.axon_KP = 0.973538 * axon_Kp
        # h.axon_KT = 1.7 * axon_Kt
        # h.axon_K = 1.021945 * axon_K
        # h.axon_LVA = 0.0014 * axon_LVA
        # h.axon_HVA = 0.00012 * axon_HVA
        # h.axon_KCA = 1.8 * axon_Kca
        
        # #h.cell.axon[0].gCa_LVAstbar_Ca_LVAst = 0.001376286159287454

        # #h.soma_na12 = h.soma_na12/2
        # h.naked_axon_na = h.soma_na16/5
        # h.navshift = -10
        # h.myelin_na = h.naked_axon_na
        # h.myelin_K = 0.303472
        # h.myelin_scale = 10
        # h.gpas_all = 3e-5 * gpas_all
        # h.cm_all = 1

        ################## M1 model values from M1 branch
        # h.dend_na12 = 0.0006922
        # h.dend_na16 = 0.0009688
        # h.dend_k = 0.0176729 * soma_K
        
        # h.soma_na12 = 0.2891301
        # h.soma_na16 = 0.1302487
        # h.soma_K = 0.1193942 * soma_K
        
        # h.ais_na16 = 1.4544224
        # h.ais_na12 = 1.0805419
        # h.ais_ca = 0.0015458*ais_ca
        # h.ais_KCa = 0.0027819*ais_KCa
        
        # h.node_na = 0.2752364 * node_na

        # h.axon_KP = 0.1498821 * axon_Kp
        # h.axon_KT = 1.1798011 * axon_Kt
        # h.axon_K = 0.1146702 * axon_K
        # h.axon_LVA = 0.0004512 * axon_LVA
        # h.axon_HVA = 0.0000134 * axon_HVA
        # h.axon_KCA = 0.6900045 * axon_Kca
        
        # #h.cell.axon[0].gCa_LVAstbar_Ca_LVAst = 0.001376286159287454

        # #h.soma_na12 = h.soma_na12/2
        # h.naked_axon_na = h.soma_na16/5
        # h.navshift = -10
        # h.myelin_na = h.naked_axon_na
        # h.myelin_K = 0.303472
        # h.myelin_scale = 10
        # h.gpas_all = 0.0000219 * gpas_all
        # h.cm_all = 1.4377617
        
        
        #___________________Kaustubh params
        h.dend_na12 = 2.48E-03 * dend_nav12
        
        # h.dend_na16 = 5.05E-03 * dend_nav16 ##TF020624
        h.dend_na16 = 0 ##TF020624
        h.dend_k = 0.0043685576 * dend_K
        
        h.soma_na12 = 3.24E-02 * soma_nav12 
        h.soma_na16 = 7.88E-02 * soma_nav16 
        
      
        h.soma_K = 0.21330453 * soma_K
        
        # h.ais_na16 = 7.2696676 * ais_nav16
        h.ais_na16 = ais_nav16_fac * ais_nav16
        print(f'&&&&&&&&&&&&&&&&&&&&&&&&&&&&&##################### the ais factor is {ais_nav16_fac} ************************************************************')

        # h.ais_na12 = 1.03E+00 * ais_nav12
        h.ais_na12 = ais_nav12_fac * ais_nav12 #TF020124 added ais_nav12 factor to fine tune

        h.ais_ca = 0.0010125926 * ais_ca
        h.ais_KCa = 0.0009423347 * ais_KCa
        
        h.node_na = 0.9934221 * node_na
        print(f'The node_na is {h.node_na} &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&')

        h.axon_KP = 0.43260124 * axon_Kp
        h.axon_KT = 1.38801 * axon_Kt
        h.axon_K = 0.89699364 *2.1* axon_K
        h.axon_LVA = 0.00034828275 * axon_LVA
        h.axon_HVA = 1.05E-05 * axon_HVA
        h.axon_KCA = 0.4008224 * axon_Kca
        
        h.gpas_all = 1.34E-05 * gpas_all


        h.cm_all = 1.6171424

        
        
        #added gpas to see if i_pas changes on currentscape
        #h.gpas_all = .001

        	
        ############################## Testing 11/17/23, temporarily removed *factor and removing ina_ina from mechs
        # h.dend_na12 = 2.48E-03  
        
        # h.dend_na16 = 5.05E-03 
        # h.dend_k = 0.0043685576 
        
        # h.soma_na12 = 3.24E-02  
        # h.soma_na16 = 7.88E-02  
        # h.soma_K = 0.21330453  
        
        # h.ais_na16 = 7.2696676  
        # h.ais_na12 = 1.03E+00  
        # h.ais_ca = 0.0010125926  
        # h.ais_KCa = 0.0009423347  
        
        # h.node_na = 0.9934221  

        # h.axon_KP = 0.43260124  
        # h.axon_KT = 1.38801  
        # h.axon_K = 0.89699364 *2.1 
        # h.axon_LVA = 0.00034828275  
        # h.axon_HVA = 1.05E-05  
        # h.axon_KCA = 0.4008224 
        
        # h.gpas_all = 1.34E-05
        # h.cm_all = 1.6171424	   
        ##############################
        

        h.dend_na12 = h.dend_na12 * nav12 * dend_nav12
        h.soma_na12 = h.soma_na12 * nav12 * soma_nav12
        
        # h.ais_na12 = h.ais_na12 * nav12 * ais_nav12
        h.ais_na12 = h.ais_na12 * ais_nav12 ##TF020624 decouple ais Nav1.2 from overall nav12

        h.dend_na16 = h.dend_na16 * nav16 * dend_nav16
        h.soma_na16 = h.soma_na16 * nav16 * soma_nav16
        
        # h.ais_na16 = h.ais_na16 * nav16 * ais_nav16
        h.ais_na16 = h.ais_na16 * ais_nav16 ##TF020624 decouple ais Nav1.6 from overall nav16
        
        h.working()
        
        h.load_file("/global/homes/t/tfenton/Neuron_general-2/Neuron_Model_12HMM16HH/printSh.hoc")
        
        # h.printVals12HHWT() ##TF will only work with HH mod files that have params like 'sh', 'tha', 'thi' etc.
        # h.printValsWT16()
        # h.printValsMUT16()
            
     
        
        
        
             
        #Function for determining and plotting the distribution of Na channels in axon.
        def chandensities (name = f"/global/homes/t/tfenton/Neuron_general-2/Plots/12HMM16HH_TF/ManuscriptFigs/Restart030824/4-FixModMistake_HH/22-changeIh-{ais_nav16_fac}"):
            distances = []
            na12_densities = []
            na16_densities = []
            na12mut_densities = []
            na16mut_densities = []
            sections = []
            

            for sec in h.cell.axon:
                for seg in sec:
                    print(seg)
                    section = f'h.distance.{seg}'
                    distance = h.distance(0,seg)
                    print(f'Distance_SEG{distance}')
                    distances.append(distance)
                    sections.append(section)

                    na12_gbar = seg.gbar_na12
                    print(na12_gbar)
                    na12_densities.append(na12_gbar)

                    na16_gbar = seg.gbar_na16
                    print(na16_gbar)
                    na16_densities.append(na16_gbar)

                    na12mut_gbar = seg.gbar_na12mut
                    na12mut_densities.append(na12mut_gbar)

                    na16mut_gbar = seg.gbar_na16mut
                    na16mut_densities.append(na16mut_gbar)

            print(distances)
            print(na12_densities)
            print(na16_densities)

            #Save data to dataframes to write to csv.
            df1 = pd.DataFrame(distances)
            df2 = pd.DataFrame(na12_densities)
            df3 = pd.DataFrame(na16_densities)
            df4 = pd.DataFrame(na12mut_densities)
            df5 = pd.DataFrame(na16mut_densities)
            df6 = pd.DataFrame(sections)
            df = pd.concat([df1,df2,df4,df3,df5,df6], axis=1, keys=['Distance','na12','na12mut','na16','na16mut','sections'])
            # df.to_csv(name+'.csv')
            
            #Plot line graph of different contributions
            fig1, ax = plt.subplots()
            plt.plot(df['na12'],label='Nav12', color='blue')
            plt.plot(df['na12mut'],label='Nav12_Mut', color='cyan', linestyle='dashed')
            plt.plot(df['na16'],label='Nav16', color='red')
            plt.plot(df['na16mut'],label='Nav16_Mut', color='orange', alpha=0.5, linestyle='dashed')
            plt.legend()
            plt.xticks(range(1,len(distances)), rotation=270)
            plt.xlabel('Segment of Axon')
            plt.ylabel('gbar')
            plt.title("Distribution of Nav12 and Nav16")
            plt.savefig(name+".png", dpi=400)

        # chandensities() ##TF uncomment to run function and plot channel densities in axon[0]

        


        os.chdir(run_dir)

        
        
        
        #############################################################
        ##Add update_mech_from_dict and update_param_value here #####
        if update:
            print ("UPDATING ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^")
            update_param_value(self,['SKv3_1'],'mtaumul',6) ##TF041924 ORIGINAL val=6
            # update_param_value(self,['SKv3_1'],'mtaumul',50) ##TF041924
            
            multiply_param(self,['SK_E2'],'gSK_E2bar',2) ##TF041924 multiplies gbar of SKE2
            multiply_param(self,['Ca_LVAst'],'gCa_LVAstbar',0.5) ##TF041924 multiplies gbar of Ca_LVAst
            

            self.na12wt_mech = [na12mechs[0]] 
            self.na12mut_mech = [na12mechs[1]]

            self.na16wt_mech = [na16mechs[0]] ##TF021424 adding ability to update na16 (HH, shifted HH etc.)
            self.na16mut_mech = [na16mechs[1]] ##TF021424 adding ability to update na16 (HH, shifted HH etc.)
            self.na16mechs = na16mechs

            self.h.working()                                                 
            p_fn_na12 = f'{params_folder}{na12name}.txt'  
            p_fn_na12_mech = f'{params_folder}{na12mut_name}.txt'
            print(f'using wt_file params {na12name}')
            self.na12_p = update_mech_from_dict(self, p_fn_na12, self.na12wt_mech)
            print(eval("h.psection()")) 
            print(f'using mut_file params {na12mut_name}')
            self.na12_pmech = update_mech_from_dict(self, p_fn_na12_mech, self.na12mut_mech) #update_mech_from_dict(mdl,dict_fn,mechs,input_dict = False) 2nd arg (dict) updates 3rd (mech)
            print(eval("h.psection()"))
            
            update_mod_param(self,['na12','na12mut'],nav12)
            
            h.load_file("/global/homes/t/tfenton/Neuron_general-2/Neuron_Model_12HMM16HH/printSh.hoc")
            # h.printVals12HHWT()

            #Adding ability to update with new Na16 mechs ##TF021424
            p_fn_na16 = f'{params_folder}{na16name}.txt'
            p_fn_na16_mech = f'{params_folder}{na16mut_name}.txt'
            
            print(f'using na16wt_file params {na16name}')
            self.na16_p = update_mech_from_dict(self, p_fn_na16,self.na16wt_mech)
            print(eval("h.psection()"))
            ##TF030624 Can load file below and run h.printValsWT to debug if mod file is getting updated or not
            h.load_file("/global/homes/t/tfenton/Neuron_general-2/Neuron_Model_12HMM16HH/printSh.hoc")
            h.printValsWT16()
            
            print(f'using na16mut_file params {na16mut_name}')
            self.na16_pmech = update_mech_from_dict(self, p_fn_na16_mech,self.na16mut_mech)
            print(eval("h.psection()"))

            update_mod_param(self,['na16','na16mut'],nav16)


            ##TF030624 Can load file below and run h.printValsWT to debug if mod file is getting updated or not
            h.load_file("/global/homes/t/tfenton/Neuron_general-2/Neuron_Model_12HMM16HH/printSh.hoc")
            h.printValsMUT16()
            # print(h("topology()"))













#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################

runNa12HMMTF.py

#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################
#############################################################################################################################################################################

sim_config_soma = {
                'section' : 'soma',
                'segment' : 0.5,
                'section_num': 0,
                #'currents' : ['ina','ica','ik'],
                'currents'  : ['na12.ina_ina','na12mut.ina_ina','na16.ina_ina','na16mut.ina_ina','ica_Ca_HVA','ica_Ca_LVAst','ihcn_Ih','ik_SK_E2','ik_SKv3_1'], #Somatic
                #'currents'  : ['na12.ina_ina','na12mut.ina_ina','na16.ina_ina','na16mut.ina_ina','ica_Ca_HVA','ica_Ca_LVAst','ik_SK_E2','ik_SKv3_1'], #AIS (no Ih)
                #'currents'  : ['ica_Ca_HVA','ica_Ca_LVAst','ik_SKv3_1','ik_SK_E2','na16.ina_ina','na16mut.ina_ina','na12.ina_ina','na12mut.ina_ina','i_pas'],
                #'currents'  : ['ihcn_Ih','ik_SKv3_1','na16.ina_ina','na16mut.ina_ina','na12.ina_ina','na12mut.ina_ina','i_pas'],
                'current_names' : ['Ih','SKv3_1','Na16 WT','Na16 WT','Na12','Na12 MUT','pas'],
                'ionic_concentrations' :["cai", "ki", "nai"]
                #'ionic_concentrations' :["ki", "nai"]
                }


root_path_out = '/global/homes/t/tfenton/Neuron_general-2/Plots/12HMM16HH_TF/ManuscriptFigs/Restart030824/5-12HMM16HH_040324/5-K_Ca_Kinetics'

if not os.path.exists(root_path_out):
        os.makedirs(root_path_out)
        # os.mkdir(root_path_out)


vals =[1]#[1]#[-80,-70-60,-50,-40,-30]
vals2 = [1]#[-30,-40,-50,-60,-70,-80]#[1]

# for i12 in np.arange(0,20,4):     
        #  for i16 in np.arange(1,11,2):
for i12 in vals:
        for i16 in vals2:
                ##Adding below function to loop through different na16.mod params        
                # filename = "/global/homes/t/tfenton/Neuron_general-2/params/na12_HMM_TF100923-2.txt" ##TF031524 for changing 8st na12
                filename12 = '/global/homes/t/tfenton/Neuron_general-2/params/na12_HMM_TF100923-2.txt'
                filename16 = '/global/homes/t/tfenton/Neuron_general-2/params/na16HH_TF2.txt'

                # changesna12 = {
                #         "sh": 8,#-3#i12,#8,
                #         "gbar": 0.01,#0.06,#0.1,#0.01,
                #         "tha": -30,#i12,#-38,
                #         "qa": 5.41,
                #         "Ra": 0.3282,
                #         "Rb": 0.1,
                #         "thi1": -40,#-80,
                #         "thi2": -40,#-80,
                #         "qd": 0.5,
                #         "qg": 1.5,
                #         "mmin": 0.02,
                #         "hmin": 0.01,
                #         "Rg": 0.01,
                #         "Rd": 0.02657,
                #         "thinf": -53,
                #         "qinf": 7.69,
                #         "vhalfs": -60,
                #         "a0s": 0.0003,
                #         "gms": 0.2,
                #         "q10": 2,
                #         "zetas": 12,
                #         "smax": 10,
                #         "vvh": -58,
                #         "vvs": 2,
                #         "ar2": 1,
                #         #"ena": 55
                #         }
                changesna16 = {
                        "sh": 8,#-3,#i16,#8,
                        "gbar": 0.01,#0.06,#0.1,#0.01,
                        "tha": -40,#-47,
                        "qa": 7.2,
                        "Ra": 0.4,
                        "Rb": 0.124,
                        "thi1": -30,#-61,
                        "thi2": -30,#-61,
                        "qd": 0.5,
                        "qg": 1.5,
                        "mmin": 0.02,  
                        "hmin": 0.01,  
                        "q10": 2,
                        "Rg": 0.01,
                        "Rd": 0.03,
                        "thinf": -65,
                        "qinf": 7,
                        "vhalfs": -40,
                        "a0s": 0.0003,
                        "gms": 0.2,
                        "zetas": 12,
                        "smax": 10,
                        "vvh": -58,
                        "vvs": 2,
                        "ar2": 1,
                        #"ena": 55
                        }
                changesna12 = {"a1_0": 7.3917081233326964, 
                        "a1_1": 0.020960637742640235, 
                        "b1_0": 0.36296088733379755, 
                        "b1_1": 0.16680524810129632, 
                        "a2_0": 466.03560625002507, 
                        "a2_1": 0.32567824887881647, 
                        "b2_0": 476.76246431747546, 
                        "b2_1": 3.237964775220791, 
                        "a3_0": 138.3653253992877, 
                        "a3_1": 0.1294574328268014, 
                        "b3_0": 3569.9158743150915, 
                        "b3_1": 0.0872001126087137, 
                        "bh_0": 2.431699390098816, 
                        "bh_1": 4.764311256848339, 
                        "bh_2": 0.12976195895416504, 
                        "ah_0": 3.640921294365118, 
                        "ah_1": 5944.063823249113, 
                        "ah_2": 0.019988765965544244, 
                        "vShift": -30, #-22.94301368173753, 
                        "vShift_inact":20, # 17.286867168698212, 
                        "maxrate": 2233.5902391087598
                        }
                ##Uncomment if want to update params file to update mod file!!!
                nf.modify_dict_file(filename12, changesna12)
                nf.modify_dict_file(filename16, changesna16)

 

                #Make WT and save data for comparison later
                # sim = tf.Na12Model_TF(ais_nav12_fac=7,ais_nav16_fac = 7,nav12=4,nav16=3,somaK=i,na12name = 'na12_HMM_TF100923',mut_name = 'na12_HMM_TF100923',
                #                 na16mechs=['na16HH_TF','na16HH_TF'],params_folder = './params/na12HMM_allsynthmuts_HOFs/',
                #                 plots_folder = f'{root_path_out}/somaK-{i}', pfx=f'WT_')
                

                ##TF031424 Best params
                # sim = tf.Na12Model_TF(ais_nav12_fac=8,ais_nav16_fac=8,nav12=1,nav16=15, KT=i12,somaK=6,
                #                 na12name = 'na12_HMM_TF100923-2',mut_name = 'na12_HMM_TF100923-2',na12mechs = ['na12annaTFHH','na12annaTFHH'],
                #                 na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16HH_TF','na16HH_TF'],params_folder = './params/',
                #                 plots_folder = f'{root_path_out}', pfx=f'WT_', update=False
                #                 )  #f'{root_path_out}/na12-{i12}_na16-{i16}'
                
                
                #################### HH MODEL ####################
                ##TF031924 These are the parameters that work best for 12HH16HH model!!!
                ##TF040224 Newly found best HH params following debugging of na12/16 and ais12/16 updating
                # sim = tf.Na12Model_TF(ais_nav12_fac=2,ais_nav16_fac=2,nav12=3,nav16=1, somaK=1, KP=100, KT=10, #somaK=10 KP=20, KP=90_KT=40
                #                         ais_ca = 1,ais_Kca = 1,soma_na16=1,soma_na12 = 1,node_na = 1,#somaK=90, KP=20, KT=6,#somaK=30,  KP=40,
                #                 na12name = 'na12annaTFHH2',mut_name = 'na12annaTFHH2',na12mechs = ['na12','na12mut'],
                #                 na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16','na16mut'],params_folder = './params/',
                #                 plots_folder = f'{root_path_out}/1_na12-{i12}_na16-{i16}', pfx=f'WT_', update=True)
                #################### HH MODEL ####################


                
                ##TF040324 Different insufficiency experiments (50% het and 0% KO) HH model Het 50% and KO na12 everywhere (including ais)
                # simwt = tf.Na12Model_TF(ais_nav12_fac=2,ais_nav16_fac=2,nav12=3,nav16=1, somaK=1, KP=100, KT=10, #somaK=10 KP=20, KP=90_KT=40
                #                         ais_ca = 1,ais_Kca=1,soma_na16=1,soma_na12=1,node_na=1,#somaK=90, KP=20, KT=6,#somaK=30,  KP=40,
                #                         na12name = 'na12annaTFHH2',mut_name = 'na12annaTFHH2',na12mechs = ['na12','na12mut'],
                #                         na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16','na16mut'],params_folder = './params/',
                #                         plots_folder = f'{root_path_out}/2_KO_na12', pfx=f'WT_', update=True)
                # wt_Vm1,wt_I1,wt_t1,wt_stim1 = simwt.get_stim_raw_data(stim_amp = 0.5,dt=0.005,rec_extra=False,stim_dur=500, sim_config = sim_config_soma)

                
                #TF040424 Insert HMM and begin tuning
                sim = tf.Na12Model_TF(ais_nav12_fac=1.5,ais_nav16_fac=1.5,nav12=2,nav16=2, somaK=1, KP=100, KT=1, #somaK=10  KP=14,KT=40, ais_nav12_fac=1.5,ais_nav16_fac=1.5,nav12=1,nav16=8, nav1216=2;5-10=1,7
                                ais_ca = 1,ais_Kca = 1, soma_na12=2, soma_na16=1, dend_nav12=1, node_na = 1,#somaK=90, KP=20, KT=6,#somaK=30,  KP=40, ##This row all 1 default
                                na12name = 'na12_HMM_TF100923-2',mut_name = 'na12_HMM_TF100923-2',na12mechs = ['na12','na12mut'],
                                na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16','na16mut'],params_folder = './params/',
                                plots_folder = f'{root_path_out}/5-13-CaL0.5_SKE2-2_epas-85', pfx=f'WT_', update=True)
                
                #TF040424 Insert HMM and begin tuning
                sim = tf.Na12Model_TF(ais_nav12_fac=1.5,ais_nav16_fac=1.5,nav12=2,nav16=2, somaK=1, KP=100, KT=1, #somaK=10  KP=14,KT=40, ais_nav12_fac=1.5,ais_nav16_fac=1.5,nav12=1,nav16=8, nav1216=2;5-10=1,7
                                ais_ca = 1,ais_Kca = 1, soma_na12=2, soma_na16=1, dend_nav12=1, node_na = 1,#somaK=90, KP=20, KT=6,#somaK=30,  KP=40, ##This row all 1 default
                                na12name = 'na12_HMM_TF100923-2',mut_name = 'na12_HMM_TF100923-2',na12mechs = ['na12','na12mut'],
                                na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16','na16mut'],params_folder = './params/',
                                plots_folder = f'{root_path_out}/5-13-CaL0.5_SKE2-2_epas-85', pfx=f'WT_', update=True)
                
                
                             
                
                fig_volts,axs = plt.subplots(2,figsize=(cm_to_in(8),cm_to_in(15)))
                sim.plot_stim(axs = axs[0],stim_amp = 0.5,dt=0.005, clr='cadetblue')
                plot_dvdt_from_volts(sim.volt_soma, sim.dt, axs[1],clr='cadetblue')
                fig_volts.savefig(f'{sim.plot_folder}/5-13-CaL0.5_SKE2-2_epas-85.pdf')
                
                # sim.save2text(ais_nav12_fac=8,ais_nav16_fac=i16,nav12=1,nav16=15,
                #                 na12name = 'na12_HMM_TF100923-2',mut_name = 'na12_HMM_TF100923-2',na12mechs = ['na12annaTFHH','na12annaTFHH'],
                #                 na16name = 'na16HH_TF2',na16mut_name = 'na16HH_TF2',na16mechs=['na16HH_TF','na16HH_TF'],params_folder = './params/',
                #                 plots_folder = f'{root_path_out}/gbar.01_1216-115_ais88_KP-{i12}----TEST')

                ##Plotting WT vs Mut Stim/DVDT/FI/Currentscapes
                # wt_Vm1,wt_I1,wt_t1,wt_stim1 = sim.get_stim_raw_data(stim_amp = 0.5,dt=0.005,rec_extra=False,stim_dur=500, sim_config = sim_config_soma)
                # sim.plot_model_FI_Vs_dvdt(wt_Vm=wt_Vm1,wt_t=wt_t1,sim_config=sim_config_soma,vs_amp=[0.5], fnpre=f'12-{i12}_16-{i16}_')#fnpre=f'{mutTXT}')
                # # # features_df = ef.get_features(sim=sim,mutTXT='WT_soma', mut_name = 'na12_HMM_TF100923')  
                
                # sim.make_currentscape_plot(amp=0.5, time1=0,time2=100,stim_start=30, sweep_len=100)
                sim.make_currentscape_plot(amp=0.5, time1=0,time2=200,stim_start=30, sweep_len=200)
                sim.make_currentscape_plot(amp=0.5, time1=0,time2=800,stim_start=30, sweep_len=800)